package com.quanroon.atten.reports.entity.example;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UpSalaryArriveExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public UpSalaryArriveExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSalaryAccountIdIsNull() {
            addCriterion("salary_account_id is null");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdIsNotNull() {
            addCriterion("salary_account_id is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdEqualTo(Integer value) {
            addCriterion("salary_account_id =", value, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdNotEqualTo(Integer value) {
            addCriterion("salary_account_id <>", value, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdGreaterThan(Integer value) {
            addCriterion("salary_account_id >", value, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("salary_account_id >=", value, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdLessThan(Integer value) {
            addCriterion("salary_account_id <", value, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdLessThanOrEqualTo(Integer value) {
            addCriterion("salary_account_id <=", value, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdIn(List<Integer> values) {
            addCriterion("salary_account_id in", values, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdNotIn(List<Integer> values) {
            addCriterion("salary_account_id not in", values, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdBetween(Integer value1, Integer value2) {
            addCriterion("salary_account_id between", value1, value2, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andSalaryAccountIdNotBetween(Integer value1, Integer value2) {
            addCriterion("salary_account_id not between", value1, value2, "salaryAccountId");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedIsNull() {
            addCriterion("amount_received is null");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedIsNotNull() {
            addCriterion("amount_received is not null");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedEqualTo(BigDecimal value) {
            addCriterion("amount_received =", value, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedNotEqualTo(BigDecimal value) {
            addCriterion("amount_received <>", value, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedGreaterThan(BigDecimal value) {
            addCriterion("amount_received >", value, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_received >=", value, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedLessThan(BigDecimal value) {
            addCriterion("amount_received <", value, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount_received <=", value, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedIn(List<BigDecimal> values) {
            addCriterion("amount_received in", values, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedNotIn(List<BigDecimal> values) {
            addCriterion("amount_received not in", values, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_received between", value1, value2, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountReceivedNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount_received not between", value1, value2, "amountReceived");
            return (Criteria) this;
        }

        public Criteria andAmountDateIsNull() {
            addCriterion("amount_date is null");
            return (Criteria) this;
        }

        public Criteria andAmountDateIsNotNull() {
            addCriterion("amount_date is not null");
            return (Criteria) this;
        }

        public Criteria andAmountDateEqualTo(Date value) {
            addCriterion("amount_date =", value, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateNotEqualTo(Date value) {
            addCriterion("amount_date <>", value, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateGreaterThan(Date value) {
            addCriterion("amount_date >", value, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateGreaterThanOrEqualTo(Date value) {
            addCriterion("amount_date >=", value, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateLessThan(Date value) {
            addCriterion("amount_date <", value, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateLessThanOrEqualTo(Date value) {
            addCriterion("amount_date <=", value, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateIn(List<Date> values) {
            addCriterion("amount_date in", values, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateNotIn(List<Date> values) {
            addCriterion("amount_date not in", values, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateBetween(Date value1, Date value2) {
            addCriterion("amount_date between", value1, value2, "amountDate");
            return (Criteria) this;
        }

        public Criteria andAmountDateNotBetween(Date value1, Date value2) {
            addCriterion("amount_date not between", value1, value2, "amountDate");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesIsNull() {
            addCriterion("remaining_wages is null");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesIsNotNull() {
            addCriterion("remaining_wages is not null");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesEqualTo(BigDecimal value) {
            addCriterion("remaining_wages =", value, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesNotEqualTo(BigDecimal value) {
            addCriterion("remaining_wages <>", value, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesGreaterThan(BigDecimal value) {
            addCriterion("remaining_wages >", value, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("remaining_wages >=", value, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesLessThan(BigDecimal value) {
            addCriterion("remaining_wages <", value, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesLessThanOrEqualTo(BigDecimal value) {
            addCriterion("remaining_wages <=", value, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesIn(List<BigDecimal> values) {
            addCriterion("remaining_wages in", values, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesNotIn(List<BigDecimal> values) {
            addCriterion("remaining_wages not in", values, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("remaining_wages between", value1, value2, "remainingWages");
            return (Criteria) this;
        }

        public Criteria andRemainingWagesNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("remaining_wages not between", value1, value2, "remainingWages");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table up_salary_arrive
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 29 15:17:26 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table up_salary_arrive
     *
     * @mbggenerated Mon Jun 29 15:17:26 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}